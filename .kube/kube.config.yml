apiVersion: v1
kind: Namespace
metadata:
  name: devops-development
  labels:
    name: devops-development
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-deployment
  namespace: devops-development
  labels:
    app: devops-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devops-deployment
  template:
    metadata:
      labels:
        app: devops-deployment
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: devops-deployment
          image: 'clementjulia/projet-app'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              cpu: '500m'
              memory: '1024Mi'
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 60
---
apiVersion: v1
kind: Service
metadata:
  name: devops-service
  namespace: devops-development
  labels:
    app: devops-service
spec:
  type: NodePort
  selector:
    app: devops-deployment
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-ingress
  namespace: devops-development
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    # - host: devops-project.com
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: devops-service
                port:
                  number: 3000